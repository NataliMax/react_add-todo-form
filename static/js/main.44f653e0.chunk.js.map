{"version":3,"sources":["api/todos.ts","components/UserInfo/UserInfo.tsx","api/users.ts","functions/helper.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/NewTodo/NewTodo.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","UserInfo","user","className","href","email","name","username","getNewTodoId","todos","Math","max","map","todo","TodoInfo","classNames","usersFromServer","find","TodoList","NewTodo","onAdd","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","setCompleted","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","trim","onChange","target","required","disabled","App","todosFromServer","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44f653e0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\nimport { Todo } from '../types/Todo';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) as User;\n}\n\nexport function getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport { getUserById } from '../../functions/helper';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={getUserById(todo.userId)} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nimport usersFromServer from '../../api/users';\nimport { getNewTodoId } from '../../functions/helper';\nimport todos from '../../api/todos';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const NewTodo: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [completed, setCompleted] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setCompleted(false);\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    setCompleted(true);\n\n    onAdd({\n      id: getNewTodoId(todos),\n      title,\n      completed,\n      userId,\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">\n          Title:\n        </label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"title\"\n          placeholder=\"Enter a title\"\n          value={title.trim()}\n          onChange={handleTitleChange}\n        />\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>)}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">\n          User:\n        </label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"user\"\n          value={userId}\n          required\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user </span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { NewTodo } from './components/NewTodo';\nimport { getNewTodoId } from './functions/helper';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewTodo onAdd={addTodo} />\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}